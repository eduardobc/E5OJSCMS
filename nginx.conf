worker_processes  1;

events {
    worker_connections  4096;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;


    # # Default server
    # server {
    #     listen 80;
    #     server_name _;
    #     return 404;
    # }


    # server for handler NodeJS request
    server {
        listen 192.168.0.113;
        server_name  *.nodejs.dev;
        error_page 404 errors/404.html;

        client_max_body_size 2M;

        # static files for back-end
        location /back-end/ {
            alias /Users/Lalo/Documents/NodeJS/E5OJSCMS/e5ojs-public/back-end/;
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
	# static files for front-end
        location /front-end/ {
            alias /Users/Lalo/Documents/NodeJS/E5OJSCMS/e5ojs-public/front-end/;
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
	# static files for back-end
        location /bower_components/ {
            alias /Users/Lalo/Documents/NodeJS/E5OJSCMS/e5ojs-public/bower_components/;
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
	# static files for images
        location /uploads/sizes/ {
            alias /Users/Lalo/Documents/NodeJS/E5OJSCMS/e5ojs-public/uploads/sizes/;
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

	# proxy reverse
        location / {
            proxy_pass http://localhost:5000;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }
    }






    # server for handler WP request
    server {
        listen 80;
        server_name  *.wordpress.dev;
        error_page 404 errors/404.html;

        root /Users/Lalo/Documents/web_projects/www/;
        # index index.php index.html index.htm;

        location / {
            try_files $uri $uri/ /index.php;
        }


        # Proxy directories (This fixes the loop)
        # This will kill any other indexes like index.html if they're not explicitly used in the URL.
        location ~[^?]*/$ {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:9080;
        }
        # Proxy any .php file.
        location ~ \.php$ {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:9080;
        }
        # Proxy to apache, used by location / {...}
        location @apache {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:9080;
        }
        # this will prevent files like .htaccess .htpassword .secret etc from being served
        # You can remove the log directives if you wish to
        # log any attempts at a client trying to access a hidden file
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

    }


}
